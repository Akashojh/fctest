{"version":3,"sources":["assets/logo.PNG","../node_modules/istanbul-reports sync","redux/reducer/userReducer.js","redux/reducer/roleReducer.js","redux/store.js","redux/actions/actionConstants.js","serviceWorker.js","utility/apiConfig.js","redux/actions/userActions.js","components/common/Header.jsx","constants/tableConstants.js","constants/mockValues.js","redux/actions/roleActions.js","components/common/FilterSection.jsx","components/UserComponents/UserTableComponent.jsx","components/common/StatisticCard.jsx","components/common/DownHead.jsx","components/UserComponents/AddUserForm.jsx","components/UserComponents/ViewDetails.jsx","components/UserComponents/EditUserFor.jsx","components/UserComponents/ResetPassword.jsx","pages/Dashboard.jsx","components/common/LogoWrapper.jsx","components/common/HeadDescription.jsx","components/common/QueryRouter.jsx","pages/Login.jsx","pages/SignUp.jsx","components/RolesComponents/RolesTableComponent.jsx","components/RolesComponents/AddRoleTableForm.jsx","components/RolesComponents/AddRoleForm.jsx","components/RolesComponents/EditRoleTableForm.jsx","components/RolesComponents/EditRoleForm.jsx","pages/RoleDashboard.jsx","index.js"],"names":["module","exports","webpackEmptyContext","req","e","Error","code","keys","resolve","id","initialState","getAllUser","getFilteredUsers","createUser","editUser","resetData","menuData","getAllRole","createRole","editRole","getAllRoleList","rootReducer","combineReducers","userReducer","state","action","type","payload","roleReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Boolean","location","hostname","match","getAllUserUrl","getAllRoleUrl","getAllUsers","pageNumber","limit","dispatch","a","async","axios","get","Math","abs","response","status","data","detail","Wrapper","styled","div","MenuWrapper","MenuDisplaySection","localMenuData","localMenus","submenues","length","name","map","iconname","getLinkTag","href","Icon","MenuPopup","Popup","wide","trigger","className","on","openOnTriggerClick","position","MainHeader","useSelector","useDispatch","useEffect","src","logo","alt","Input","list","placeholder","icon","iconPosition","value","size","UserHeadData","RolesHeadData","AddRoleHeadData","statusOptions","key","text","organizationTypes","organizations","dateRange","getAllRoles","PopPupWrapper","POPUP","useState","setDateRangeValue","fromDate","setFromDate","toDate","setToDate","role","setRole","setStatus","openState","setOpenState","roles","modifiedRoles","role_id","role_name","Button","open","onOpen","Dropdown","clearable","selection","options","onChange","Date","target","toISOString","search","floated","color","onClick","active","modifiedUrl","ROLEFILTERPOPUP","orgType","setOrgType","org_type","getFilteredRoles","FilterSection","FilterHeadText","selector","selectedColumns","Search","label","optionsNormalizer","rightAligned","c","DropDownSpan","span","TableComponent","userData","setOpenEditUserModel","selectedRow","selectedColumnValues","setopenRestPasswordModel","tableHead","setTableHead","handleDropdownChange","DateFormater","date","getDate","getMonth","getFullYear","Table","basic","Header","Row","HeaderCell","Body","Cell","includes","email","user_name","organisation","updated_at","created_at","Menu","Item","Loader","HorizantalBar","hr","StatisticCard","labelText","Value","DownHead","headingText","Buttons","StatisticCardData","Segment","Group","horizontal","lable","AddUser","setOpenAddUserModel","erroObject","usedId","setUserId","password","setPassword","setName","setEmail","mobile","setMobile","orgName","setOrgName","selectedRoles","setSelectedRoles","emailCheck","setEmailCheck","smsCheck","setSmaCheck","inviteCheck","setInviteCheck","callBackConfirmation","toastr","success","Form","onSubmit","postRoles","postData","phone_number","organisation_type","invite_via_mobile","invite_via_email","post","Field","control","required","error","pattern","widths","max","maxLength","Select","children","htmlFor","searchInput","Checkbox","disabled","fluid","multiple","EditUser","console","log","Object","parseInt","put","defaultValue","ResetPassword","restResponse","username","FilterWrapper","TableWrapper","PaginationWrapper","Dashboard","openAddUserModel","openEditUserModel","openRestPasswordModel","setSelectedRow","setSelectedColumnsValues","disptch","users","total_users","active_users","this_month_users","Container","statisTicalData","Pagination","boundaryRange","defaultActivePage","ellipsisItem","firstItem","lastItem","siblingRange","totalPages","ceil","onPageChange","activePage","Modal","closeOnDimmerClick","closeOnEscape","Content","Actions","Logo","HeadDescription","headText","description","QueryRouter","linkText","linkTo","Login","Signup","RolesTableComponent","roleData","setOpenEditRoleModel","role_description","users_count","AddRoleTableForm","groupListData","functions","m","actions","group_name","function_id","function_name","toggle","create","edit","view","delete","AddRole","setOpenAddRoleModel","setDescription","setGroupListData","allGroupListData","group_permissions","undefined","EditRoleTableForm","defaultChecked","EditRole","setAllGroupListData","RoleDashboard","openAddRoleModel","openEditRoleModel","total_roles","active_roles","this_month_roles","ReactDOM","render","path","exact","component","SignUp","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f3ca65f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.efebd8fb.PNG\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 266;","import * as actionTypes from '../actions/actionConstants';\n\nconst initialState = {\n    getAllUser:[],\n    getFilteredUsers:[],\n    createUser:null,\n    editUser:null,\n    resetData: null,\n    menuData: []\n}\n\n\nexport const userReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.GETALLUSERS:\n            return {\n                ...state, getAllUser: action.payload\n            }\n        case actionTypes.CREATEUSER:\n            return {\n                ...state, createUser: action.payload\n            }\n        case actionTypes.UPDATEUSER:\n        return {\n            ...state, editUser: action.payload\n        }\n        case actionTypes.GETFILTEREDUSERS:\n        return {\n            ...state, getAllUser: action.payload\n        }\n        case actionTypes.MENUDATA:\n        return {\n            ...state, menuData: action.payload\n        }\n        case actionTypes.RESETPASSWORD:\n        return {\n            ...state, resetData: action.payload\n        }\n        default:\n            return state\n    }\n}","import * as actionTypes from '../actions/actionConstants';\n\nconst initialState = {\n    getAllRole: [],\n    createRole: null,\n    editRole: null,\n    getAllRoleList: []\n\n}\n\n\nexport const roleReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.GETALLROLES:\n            return {\n                ...state, getAllRole: action.payload\n            }\n        case actionTypes.CREATEROLE:\n            return {\n                ...state, createRole: action.payload\n            }\n        case actionTypes.UPDATEROLE:\n            return {\n                ...state, editRole: action.payload\n            }\n        case actionTypes.GETROLEGROUPLIST:\n            return {\n                ...state, getAllRoleList: action.payload\n            }\n        case actionTypes.GETFILTEREDROLES:\n            return {\n                ...state, getAllRole: action.payload\n            }\n        default:\n            return state\n    }\n}","\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { userReducer } from './reducer/userReducer';\nimport { roleReducer } from './reducer/roleReducer'\n\nconst rootReducer = combineReducers({\n    userReducer,\n    roleReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n// const store = createStore(rootReducer, enhancers(applyMiddleware(thunk)));\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nexport default store;\n","export const GETALLUSERS = 'GETALLUSERS';\nexport const GETUSER = 'GETUSER';\nexport const GETFILTEREDUSERS = 'GETFILTEREDUSERS';\nexport const CREATEUSER = 'CREATEUSER';\nexport const UPDATEUSER = 'UPDATEUSER';\nexport const RESETPASSWORD = 'RESETPASSWORD';\nexport const MENUDATA = 'MENUDATA';\n\n\n\nexport const GETALLROLES = 'GETALLROLES';\nexport const CREATEROLE = 'CREATEROLE';\nexport const UPDATEROLE = 'UPDATEROLE';\nexport const GETROLEGROUPLIST = 'GETROLEGROUPLIST';\nexport const GETFILTEREDROLES = 'GETFILTEREDROLES';\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const getAllUserUrl = 'https://gpy68qpd5d.execute-api.ap-south-1.amazonaws.com/development/api_cas_fundscorner/v1/get_user_list';\nexport const createUserUrl = 'https://gpy68qpd5d.execute-api.ap-south-1.amazonaws.com/development/api_cas_fundscorner/v1/add_user';\nexport const updateUserurl = 'https://gpy68qpd5d.execute-api.ap-south-1.amazonaws.com/development/api_cas_fundscorner/v1/update_user';\nexport const menuDataurl = 'https://gpy68qpd5d.execute-api.ap-south-1.amazonaws.com/development/api_cas_menu/v1/get_app_menu_list';\nexport const resetPasswordUrl = 'https://gpy68qpd5d.execute-api.ap-south-1.amazonaws.com/development/api_cas_fundscorner/v1/reset_password';\n\n\nexport const getAllRoleUrl = 'https://gpy68qpd5d.execute-api.ap-south-1.amazonaws.com/development/api_cas_roles/v1/get_roles_list';\nexport const createRoleUrl = 'https://gpy68qpd5d.execute-api.ap-south-1.amazonaws.com/development/api_cas_roles/v1/add_role';\nexport const updateRoleUrl = 'https://gpy68qpd5d.execute-api.ap-south-1.amazonaws.com/development/api_cas_roles/v1/edit_role';\nexport const getRoleGroupList = 'https://gpy68qpd5d.execute-api.ap-south-1.amazonaws.com/development/api_cas_roles/user/groups';\n","import * as actionTypes from './actionConstants';\nimport { getAllUserUrl, createUserUrl, updateUserurl, menuDataurl, resetPasswordUrl } from '../../utility/apiConfig';\nimport axios from 'axios';\n\n\nexport const getAllUsers = (pageNumber = 0, limit = 5) => {\n    return async (dispatch) => {\n        const response = await axios.get(`${getAllUserUrl}?limit=${limit}&page_no=${Math.abs(pageNumber)}`);\n        if (response && response.status === 200 && response.data.status === 200) {\n            dispatch({\n                type: actionTypes.GETALLUSERS,\n                payload: response.data.detail\n            })\n        } else {\n            dispatch({\n                type: actionTypes.GETALLUSERS,\n                payload: []\n            })\n        }\n    }\n};\n\nexport const getFilteredUsers = (role, fromDate, toDate, active) => {\n    let modifiedUrl = `${getAllUserUrl}?limit=5`;\n    if(role){\n        modifiedUrl = `${modifiedUrl}&role=${role}`;\n    }\n    if(fromDate){\n        modifiedUrl = `${modifiedUrl}&fromDate=${fromDate}`;\n    }\n    if(toDate) {\n        modifiedUrl = `${modifiedUrl}&toDate=${toDate}`\n    }\n    if(active) {\n        modifiedUrl = `${modifiedUrl}&active=${active}`\n    }\n    return async (dispatch) => {\n        // (`${getAllUserUrl}?limit=5&page_no=${Math.abs(pageNumber)}?role=${}&fromDate=${}&toDate=${}&active=${}`);\n        const response = await axios.get(`${getAllUserUrl}?role=${role}&fromDate=${fromDate}&toDate=${toDate}&active=${active}`);\n        if (response && response.status === 200 && response.data.status === 200) {\n            dispatch({\n                type: actionTypes.GETFILTEREDUSERS,\n                payload: response.data.detail\n            })\n        } else {\n            dispatch({\n                type: actionTypes.GETFILTEREDUSERS,\n                payload: []\n            })\n        }\n    }\n}\n\nexport const createUser = (payload, callBackConfirmation) => {\n    return async (dispatch) => {\n        const response = await axios.post(createUserUrl, payload);\n        if (response && response.status === 200 && response.data.status === 200) {\n            callBackConfirmation();\n            /* dispatch({\n                type: actionTypes.CREATEUSER,\n                payload: response.data.status\n            }) */\n        } else {\n            /* dispatch({\n                type: actionTypes.CREATEUSER,\n                payload: response.data.status\n            }) */\n        }\n    }\n};\nexport const editUser = (payload, email, callBackConfirmation) => {\n    return async (dispatch) => {\n        const response = await axios.put(`${updateUserurl}/${email}`, payload);\n        if (response && response.status === 200 && response.data.status === 200) {\n            callBackConfirmation();\n            /* dispatch({\n                type: actionTypes.UPDATEUSER,\n                payload: response.data.status\n            }) */\n        } else {\n            /* dispatch({\n                type: actionTypes.UPDATEUSER,\n                payload: response.data.status\n            }) */\n        }\n    }\n};\nexport const menuData = () => {\n    return async (dispatch) => {\n        const response = await axios.get(menuDataurl);\n        if (response && response.status === 200 && response.data.status === 200) {\n            dispatch({\n                type: actionTypes.MENUDATA,\n                payload: response.data.detail\n            })\n        } else {\n            dispatch({\n                type: actionTypes.MENUDATA,\n                payload: []\n            })\n        }\n    }\n};\nexport const resetPassword = (payload) => {\n    return async (dispatch) => {\n        const response = await axios.post(resetPasswordUrl, payload);\n        if (response && response.status === 200 && response.data.status === 200) {\n            dispatch({\n                type: actionTypes.RESETPASSWORD,\n                payload: response.data.status\n            })\n        } else {\n            dispatch({\n                type: actionTypes.RESETPASSWORD,\n                payload: response.data.status\n            })\n        }\n    }\n};\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Input, Icon, Popup} from \"semantic-ui-react\";\nimport logo from \"../../assets/logo.PNG\";\nimport { useSelector, useDispatch} from 'react-redux';\nimport { menuData } from '../../redux/actions/userActions';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background: rgb(41,71,114);\n  padding: 10px 20px;\n  min-height: 40px;\n  align-items: center;\n  .inner {\n    display: flex;\n    justify-content: space-evenly;\n    img {\n      width: 35px;\n      margin-right: 15px;\n    }\n    input {\n        background: rgb(78,102,137);\n    }\n    .inputCLass {\n      min-width: 25rem;\n    }\n    .bellClass {\n        color:rgb(210,218,235);\n    }\n    .thClass {\n        color: aliceblue;\n    }\n  }\n`;\nconst MenuWrapper = styled.div`\n  display: flex;\n  justify-content:space-evenly;\n  .mianDiv {\n    width: 230px;\n    text-align: left;\n    padding: 10px;\n    div {\n      padding:5px 0; \n    }\n  }\n`;\n\nconst MenuDisplaySection = ({ localMenuData }) => {\n  let localMenus = [];\n  if(localMenuData.submenues && localMenuData.submenues.length) {\n    localMenus = localMenuData.submenues;\n  }\n  return(\n    <>\n    <h4>{localMenuData.name}</h4>\n      {\n        localMenus.map(e => {\n          let iconname = \"\";\n          switch(localMenuData.name) {\n            case \"My Queues\": iconname = \"file code outline\";\n                              break;\n            case \"Applications\": iconname = \"window minimize\";\n                              break;\n            case \"Setup\": iconname = \"circle\";\n                              break;\n            case \"Core\": iconname = \"\";\n                              break;\n            default: iconname = \"file code outline\";\n          }\n          let getLinkTag = e.name;\n          if(e.name === 'User Management'){\n            getLinkTag = <a href=\"/user\">{e.name}</a>\n          }\n          if(e.name === 'Role Management'){\n            getLinkTag = <a href=\"/role\">{e.name}</a>\n          }\n          return <div>{localMenuData.name !== \"Core\" && <Icon name={iconname} />}{getLinkTag}</div>\n        })\n      }\n  </>\n  )\n}\n\nconst MenuPopup = ({localMenuData}) => {\n  return(\n    <Popup\n      wide\n      trigger={<Icon name=\"th large\" className=\"thClass\" />}\n      on=\"click\"\n      openOnTriggerClick\n      position=\"bottom right\"\n    >\n    <MenuWrapper>\n      <div className=\"mianDiv\">\n        <MenuDisplaySection localMenuData={( localMenuData && localMenuData.length) ? localMenuData[0] : []} />\n      </div>\n      <div className=\"mianDiv\">\n        <MenuDisplaySection localMenuData={( localMenuData && localMenuData.length) ? localMenuData[1] : []} />\n      </div>\n      <div className=\"mianDiv\">\n        <MenuDisplaySection localMenuData={( localMenuData && localMenuData.length) ? localMenuData[2] : []} />\n      </div>\n      <div className=\"mianDiv\">\n        <MenuDisplaySection localMenuData={( localMenuData && localMenuData.length) ? localMenuData[3] : []} />\n      </div>\n    </MenuWrapper>\n    </Popup>\n  )\n}\n\nconst MainHeader = () => {\n  const localMenuData = useSelector(state=> state.userReducer.menuData);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(menuData());\n  }, [])\n  return (\n    <Wrapper>\n      <div className=\"inner\">\n        <img src={logo} alt=\"logo\" />\n        <div>\n          <Input\n            list=\"languages\"\n            placeholder=\"Search Bussiness\"\n            icon=\"search\"\n            iconPosition=\"left\"\n            className=\"inputCLass\"\n          />\n          <datalist id=\"languages\">\n            <option value=\"English\" />\n            <option value=\"Chinese\" />\n            <option value=\"Dutch\" />\n          </datalist>\n        </div>\n      </div>\n\n      <div className=\"inner\">\n        <div>\n          <Icon name=\"bell\" size=\"large\" className=\"bellClass\" />\n        </div>\n        <div>\n          <MenuPopup localMenuData={ localMenuData }/>\n        </div>\n        <div></div>\n      </div>\n    </Wrapper>\n  );\n};\nexport default MainHeader;\n","export const UserHeadData = ['USER ID', 'USER NAME', 'ORGANIZATION', 'STATUS', 'MODIFIED DATE', 'CREATED DATE', 'Action'];\nexport const RolesHeadData = ['ROLE ID', 'MODIFIED DATE', 'ROLE NAME', 'ORG TYPE', 'DESCRIPTION', 'USERS', 'STATUS', 'Action'];\nexport const AddRoleHeadData = ['Group', 'Function ID', 'Name', 'Create', 'Edit', 'View', 'Delete', 'Others'];","export const statusOptions = [\n    { key: 'active', text: 'Active', value: 'active' },\n    { key: 'inactive', text: 'InActive', value: 'inactive' }\n];\n\nexport const organizationTypes = [\n    { key: 'platform', text: 'Platform', value: 'platform' },\n    { key: 'lender', text: 'Lender', value: 'lender' },\n    { key: 'referral partner', text: 'Referral Partner', value: 'referral partner' }\n];\n\nexport const organizations = [\n    { key: 'mit', text: 'MIT', value: 'mit' },\n    { key: 'jit', text: 'JIT', value: 'jit' },\n    { key: 'lit', text: 'LIT', value: 'lit' }\n];\n\nexport const dateRange = [\n    { key: '1week', text: '1 Week', value: '1week' },\n    { key: '1month', text: '1 Month', value: '1month' }\n];","import * as actionTypes from './actionConstants';\nimport { getAllRoleUrl, createRoleUrl, updateRoleUrl, getRoleGroupList } from '../../utility/apiConfig';\nimport axios from 'axios';\n\n\nexport const getAllRoles = (pageNumber = 0, limit = 5) => {\n    return async (dispatch) => {\n        const response = await axios.get(`${getAllRoleUrl}?limit=${limit}&page_no=${Math.abs(pageNumber)}`);\n        if (response && response.status === 200 && response.data.status === 200) {\n            dispatch({\n                type: actionTypes.GETALLROLES,\n                payload: response.data.detail\n            })\n        } else {\n            dispatch({\n                type: actionTypes.GETALLROLES,\n                payload: []\n            })\n        }\n\n    }\n};\nexport const createRole = (payload, callBackConfirmation) => {\n    return async (dispatch) => {\n        console.log(\"paylode\", payload)\n        const response = await axios.post(createRoleUrl, payload);\n        if (response && response.status === 200 && response.data.status === 200) {\n            callBackConfirmation();\n            // dispatch({\n            //     type: actionTypes.CREATEROLE,\n            //     payload: response.data.status\n            // })\n        } else {\n            // dispatch({\n            //     type: actionTypes.CREATEROLE,\n            //     payload: response.data.status\n            // })\n        }\n    }\n};\nexport const editRole = (payload, role_name, callBackConfirmation) => {\n    console.log(\"payload\", payload)\n    return async (dispatch) => {\n        const response = await axios.put(`${updateRoleUrl}/${role_name}`, payload);\n        if (response && response.status === 200 && response.data.status === 200) {\n            callBackConfirmation();\n            // dispatch({\n            //     type: actionTypes.UPDATEROLE,\n            //     payload: response.data.status\n            // })\n        } else {\n            // dispatch({\n            //     type: actionTypes.UPDATEROLE,\n            //     payload: response.data.status\n            // })\n        }\n    }\n};\nexport const getRoleGroup = () => {\n    return async (dispatch) => {\n        const response = await axios.get(`${getRoleGroupList}`);\n        if (response && response.status === 200 && response.data.status === 200) {\n            dispatch({\n                type: actionTypes.GETROLEGROUPLIST,\n                payload: response.data.detail\n            })\n        } else {\n            dispatch({\n                type: actionTypes.GETROLEGROUPLIST,\n                payload: []\n            })\n        }\n    }\n};\nexport const getFilteredRoles = (org_type, fromDate, toDate, active) => {\n    let modifiedUrl = `${getAllRoleUrl}?limit=5`;\n    if (org_type) {\n        modifiedUrl = `${modifiedUrl}&role=${org_type}`;\n    }\n    if (fromDate) {\n        modifiedUrl = `${modifiedUrl}&fromDate=${fromDate}`;\n    }\n    if (toDate) {\n        modifiedUrl = `${modifiedUrl}&toDate=${toDate}`\n    }\n    if (active) {\n        modifiedUrl = `${modifiedUrl}&active=${active}`\n    }\n    return async (dispatch) => {\n        // (`${getAllUserUrl}?limit=5&page_no=${Math.abs(pageNumber)}?role=${}&fromDate=${}&toDate=${}&active=${}`);\n        const response = await axios.get(`${getAllRoleUrl}?org_type=${org_type}&fromDate=${fromDate}&toDate=${toDate}&active=${active}`);\n        if (response && response.status === 200 && response.data.status === 200) {\n            dispatch({\n                type: actionTypes.GETFILTEREDROLES,\n                payload: response.data.detail\n            })\n        } else {\n            dispatch({\n                type: actionTypes.GETFILTEREDROLES,\n                payload: []\n            })\n        }\n    }\n}","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Search, Button, Popup, Dropdown, Input, Checkbox, Select } from 'semantic-ui-react';\nimport { UserHeadData, RolesHeadData } from '../../constants/tableConstants';\nimport ReactMultiSelectCheckboxes from 'react-multiselect-checkboxes';\nimport { statusOptions, dateRange } from '../../constants/mockValues';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilteredUsers } from '../../redux/actions/userActions';\nimport { getFilteredRoles } from '../../redux/actions/roleActions'\nimport { organizationTypes } from '../../constants/mockValues';\n\nconst Wrapper = styled.div`\n  display: flex;\n  padding: 10px 0px;\n  justify-content: space-between;\n  align-items: center;\n  .inner {\n    display: flex;\n    justify-content: space-around;\n  }\n  .CheckContainer {\n    display: flex;\n    flex-direction: column;\n    padding: 10px;\n    div{\n      padding: 5px;\n    }\n  }\n  .css-1jllj6i-control{\n    display: none;\n  }\n`;\n\nconst PopPupWrapper = styled.div`\n  padding: 15px;\n  .popupRow {\n    display: flex;\n  }\n`;\n\nconst POPUP = () => {\n  const [dateRangeValue, setDateRangeValue] = useState('');\n  const [fromDate, setFromDate] = useState('');\n  const [toDate, setToDate] = useState('');\n  const [role, setRole] = useState('');\n  const [status, setStatus] = useState('');\n  const [openState, setOpenState] = useState();\n  const dispatch = useDispatch();\n  const roles = useSelector(state => state.roleReducer.getAllRole);\n  const statusOptions = [\n    { key: 'active', text: 'Active', value: 'active' },\n    { key: 'inactive', text: 'InActive', value: 'inactive' }\n  ];\n  let modifiedRoles = [];\n  if (roles && roles.roles) {\n    modifiedRoles = roles.roles.map(e => {\n      return { key: e.role_id, text: e.role_name, value: e.role_name }\n    });\n  }\n  return (\n    <Popup\n      wide\n      trigger={<Button icon=\"sliders horizontal\" />}\n      on=\"click\"\n      openOnTriggerClick\n      open={openState}\n      onOpen={() => setOpenState(true)}\n      position=\"bottom right\"\n    >\n      <PopPupWrapper>\n        <div className=\"popupRow\">\n          <div>\n            <h5>Date Range</h5>\n            <Dropdown\n              clearable\n              selection\n              options={dateRange}\n              // defaultValue='1week'\n              onChange={(e, { value }) => setDateRangeValue(value)}\n              placeholder=\"Select Date Range\"\n            />\n          </div>\n          <div>\n            <h5>From</h5>\n            <Input type=\"Date\" onChange={(e) => setFromDate(new Date(e.target.value).toISOString())} />\n          </div>\n          <div>\n            <h5>To</h5>\n            <Input type=\"Date\" onChange={(e) => setToDate(new Date(e.target.value).toISOString())} />\n          </div>\n        </div>\n\n        <div className=\"popupRow\">\n          <div>\n            <h5>Role / Groups</h5>\n            <Dropdown\n              clearable\n              search\n              selection\n              onChange={(e, { value }) => setRole(value)}\n              options={modifiedRoles}\n              placeholder=\"Select Role\"\n            />\n          </div>\n          <div>\n            <h5>Status</h5>\n            <Dropdown\n              clearable\n              search\n              selection\n              onChange={(e, { value }) => setStatus(value === 'active' ? true : false)}\n              options={statusOptions}\n              placeholder=\"Select Status\"\n            />\n          </div>\n        </div>\n        <div>\n          <Button floated={'right'} color=\"blue\" onClick={() => { dispatch(getFilteredUsers(role, fromDate, toDate, status)); setOpenState(false) }}>\n            Search\n        </Button>\n          <Button floated={'right'} onClick={() => setOpenState(false)}>\n            Cancel\n        </Button>\n        </div>\n      </PopPupWrapper>\n    </Popup>\n  );\n};\nconst ROLEFILTERPOPUP = () => {\n  const [dateRangeValue, setDateRangeValue] = useState('');\n  const [fromDate, setFromDate] = useState('');\n  const [toDate, setToDate] = useState('');\n  const [orgType, setOrgType] = useState();\n  const [status, setStatus] = useState('');\n  const dispatch = useDispatch();\n  const statusOptions = [\n    { key: 'active', text: 'Active', value: 'active' },\n    { key: 'inactive', text: 'InActive', value: 'inactive' }\n  ];\n\n  return (\n    <Popup\n      wide\n      trigger={<Button icon=\"sliders horizontal\" />}\n      on=\"click\"\n      openOnTriggerClick\n      position=\"bottom right\"\n    >\n      <PopPupWrapper>\n        <div className=\"popupRow\">\n          <div>\n            <h5>Date Range</h5>\n            <Dropdown\n              clearable\n              selection\n              options={dateRange}\n              // defaultValue='1week'\n              onChange={(e, { value }) => setDateRangeValue(value)}\n              placeholder=\"Select Date Range\"\n            />\n          </div>\n          <div>\n            <h5>From</h5>\n            <Input type=\"Date\" onChange={(e) => setFromDate(new Date(e.target.value).toISOString())} />\n          </div>\n          <div>\n            <h5>To</h5>\n            <Input type=\"Date\" onChange={(e) => setToDate(new Date(e.target.value).toISOString())} />\n          </div>\n        </div>\n\n        <div className=\"popupRow\">\n          <div>\n            <h5>Organization Type</h5>\n            <Dropdown\n              clearable\n              search\n              selection\n              onChange={(e, { value }) => setOrgType(value)}\n              options={organizationTypes}\n              placeholder=\"Select Role\"\n            />\n          </div>\n          <div>\n            <h5>Status</h5>\n            <Dropdown\n              clearable\n              search\n              selection\n              onChange={(e, { value }) => setStatus(value === 'active' ? true : false)}\n              options={statusOptions}\n              placeholder=\"Select Status\"\n            />\n          </div>\n        </div>\n        <div>\n          <Button floated={'right'} color=\"blue\" onClick={() => dispatch(getFilteredRoles(orgType, fromDate, toDate, status))}>\n            Search\n        </Button>\n          <Button floated={'right'} >\n            Cancel\n        </Button>\n        </div>\n      </PopPupWrapper>\n    </Popup>\n  );\n};\nconst FilterSection = ({ FilterHeadText, selector, selectedColumns }) => {\n  const optionsNormalizer = () => {\n    let data = [];\n    if (selector === 'user') {\n      data = UserHeadData;\n    } else if (selector === 'roles') {\n      data = RolesHeadData;\n    }\n    return data.map(e => {\n      return {\n        key: e,\n        label: e,\n        value: e\n      }\n    })\n  }\n\n  return (\n    <Wrapper>\n      <h3>{FilterHeadText}</h3>\n      <div className=\"inner\">\n        <Search placeholder=\"Search here\" />\n        <div>\n          Filter\n          {selector === 'user' && <POPUP />}\n          {selector === 'roles' && <ROLEFILTERPOPUP />}\n        </div>\n        <ReactMultiSelectCheckboxes options={optionsNormalizer()} rightAligned onChange={(e) => selectedColumns(e.map(c => c.value))} />\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default FilterSection;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Table, Label } from 'semantic-ui-react';\nimport { Dropdown, Loader } from 'semantic-ui-react';\nimport { UserHeadData } from '../../constants/tableConstants';\n\nconst Wrapper = styled.div`\n  .hideColumn {\n    display: none;\n  }\n`;\nconst DropDownSpan = styled.span`\n  color: blue;\n`;\n\nconst TableComponent = ({\n  userData,\n  setOpenEditUserModel,\n  selectedRow,\n  selectedColumnValues,\n  setopenRestPasswordModel\n}) => {\n  const [tableHead, setTableHead] = useState(UserHeadData);\n\n  useEffect(() => {\n    if (selectedColumnValues.length) {\n      setTableHead(selectedColumnValues);\n    }\n  }, [selectedColumnValues]);\n\n  const handleDropdownChange = (e, value) => {\n    if (value === 'view/edit details') {\n      setOpenEditUserModel(true);\n      selectedRow(e);\n    } else if (value === 'reset password') {\n      setopenRestPasswordModel(true);\n      selectedRow(e);\n    }\n  };\n\n  const DateFormater = date =>\n    `${date.getDate()}-${date.getMonth() + 1}-${date.getFullYear()}`;\n  return (\n    <Wrapper>\n      <Table basic=\"very\">\n        <Table.Header>\n          <Table.Row>\n            {tableHead.map(e => {\n              return <Table.HeaderCell key={e}>{e}</Table.HeaderCell>;\n            })}\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {userData && userData.length ? (\n            userData.map(e => {\n              return (\n                <Table.Row>\n                  <Table.Cell\n                    className={\n                      tableHead.includes('USER ID') ? '' : 'hideColumn'\n                    }\n                  >\n                    {e.email}\n                  </Table.Cell>\n                  <Table.Cell\n                    className={\n                      tableHead.includes('USER NAME') ? '' : 'hideColumn'\n                    }\n                  >\n                    {e.user_name}\n                  </Table.Cell>\n                  <Table.Cell\n                    className={\n                      tableHead.includes('ORGANIZATION') ? '' : 'hideColumn'\n                    }\n                  >\n                    {e.organisation}\n                  </Table.Cell>\n                  {/* <Table.Cell\n                    className={\n                      tableHead.includes('VERIFIED') ? '' : 'hideColumn'\n                    }\n                  >\n                    <Label color={e.email ? 'green' : 'red'}>Email</Label>\n                    <Label color={e.phone_number ? 'green' : 'red'}>\n                      Mobile\n                    </Label>\n                  </Table.Cell> */}\n                  <Table.Cell\n                    className={tableHead.includes('STATUS') ? '' : 'hideColumn'}\n                  >\n                    {e.active ? 'Active' : 'Inactive'}\n                  </Table.Cell>\n                  <Table.Cell\n                    className={\n                      tableHead.includes('MODIFIED DATE') ? '' : 'hideColumn'\n                    }\n                  >\n                    {e.updated_at ? DateFormater(new Date(e.updated_at)) : DateFormater(new Date(e.created_at))}\n                  </Table.Cell>\n                  <Table.Cell\n                    className={\n                      tableHead.includes('CREATED DATE') ? '' : 'hideColumn'\n                    }\n                  >\n                    {DateFormater(new Date(e.created_at))}\n                  </Table.Cell>\n                  <Table.Cell\n                    className={tableHead.includes('Action') ? '' : 'hideColumn'}\n                  >\n                    <DropDownSpan>\n                      <Dropdown text=\"Action\">\n                        <Dropdown.Menu>\n                          <Dropdown.Item\n                            onClick={() =>\n                              handleDropdownChange(e, 'view/edit details')\n                            }\n                          >\n                            View / Edit User\n                          </Dropdown.Item>\n                          <Dropdown.Item\n                            onClick={() =>\n                              handleDropdownChange(e, 'reset password')\n                            }\n                          >\n                            Reset Password\n                          </Dropdown.Item>\n                        </Dropdown.Menu>\n                      </Dropdown>\n                    </DropDownSpan>\n                  </Table.Cell>\n                </Table.Row>\n              );\n            })\n          ) : (\n            <Table.Row>\n              <Loader active />\n            </Table.Row>\n          )}\n        </Table.Body>\n      </Table>\n    </Wrapper>\n  );\n};\n\nexport default TableComponent;\n","import React from 'react';\nimport styled from 'styled-components';\n\n\nconst Wrapper = styled.div`\n    .upperLable {\n        font-size: 10px;\n        margin:0 5px;\n    }\n    .Value{\n        font-size:20px;\n        font-weight: bold;\n        margin:0 5px;\n    }\n`;\nconst HorizantalBar = styled.hr`\n    background: green;\n    padding:2px;\n    margin:5px;\n`;\n\nconst StatisticCard = ({labelText, Value}) => {\n    return(\n        <Wrapper>\n            <p className=\"upperLable\">{labelText}</p>\n            <p className=\"Value\">{Value}</p>\n            <HorizantalBar />\n        </Wrapper>\n    )\n}\n\nexport default StatisticCard;","import React from 'react';\nimport styled from 'styled-components';\nimport { Segment } from 'semantic-ui-react';\nimport StatisticCard from './StatisticCard';\n\nconst Wrapper = styled.div`\n  height: 140px;\n  background: rgb(210, 218, 235);\n  .downhard {\n    max-width: 1248px;\n    width: 100%;\n    height: 100%;\n    margin: 0 auto;\n    display: flex;\n  align-items: center;\n  justify-content: space-between;\n  position: relative;\n  .segmentDown {\n    position: absolute;\n    transform: translate(-50%, -50%);\n    top: 100%;\n    left: 50%;\n    width: 100%;\n    margin: 0;\n    padding: 0;\n    .ui.segment {\n      padding: 0;\n    }\n    .ui.horizontal.segments {\n      margin: 0;\n      padding: 0;\n    }\n  }\n  }\n  \n`;\n\nconst DownHead = ({ headingText, Buttons, StatisticCardData }) => {\n  if (StatisticCardData) {\n\n    return (\n      <Wrapper>\n      <div className=\"downhard\">\n        <h3>{headingText}</h3>\n        <div>\n          {Buttons}\n        </div>\n        <div className=\"segmentDown\" >\n          <Segment.Group horizontal>\n            <Segment>\n              <StatisticCard labelText={StatisticCardData[0].lable} Value={StatisticCardData[0].value} />\n            </Segment>\n            <Segment>\n              <StatisticCard labelText={StatisticCardData[1].lable} Value={StatisticCardData[1].value} />\n            </Segment>\n            <Segment>\n              <StatisticCard labelText={StatisticCardData[2].lable} Value={StatisticCardData[2].value} />\n            </Segment>\n          </Segment.Group>\n        </div>\n        </div>\n      </Wrapper>\n    );\n  }\n  else {\n    return (\n      <Wrapper>\n        <h3>{headingText}</h3>\n        <div>\n          {Buttons}\n        </div>\n      </Wrapper>\n    );\n  }\n};\n\nexport default DownHead;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Form, Input, Checkbox, Button, Select, Dropdown } from 'semantic-ui-react';\nimport toastr from 'toastr';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllUsers, createUser } from '../../redux/actions/userActions';\nimport { organizationTypes, organizations, statusOptions } from '../../constants/mockValues';\n\nconst Wrapper = styled.div`\n  input[type='number']::-webkit-inner-spin-button,\n  input[type='number']::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n  input {\n    background: rgb(78, 102, 137);\n  }\n`;\n\nconst errObject = {\n  content: 'Please enter a valid email address',\n  pointing: 'below'\n};\n\nconst AddUser = ({ setOpenAddUserModel }) => {\n  const [erroObject, setErrorObject] = useState(false);\n  const [usedId, setUserId] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [mobile, setMobile] = useState();\n  const [status, setStatus] = useState();\n  const [orgType, setOrgType] = useState();\n  const [orgName, setOrgName] = useState();\n  const [selectedRoles,setSelectedRoles] = useState([]);\n  const [emailCheck, setEmailCheck] = useState(false);\n  const [smsCheck, setSmaCheck] = useState(false);\n  const [inviteCheck, setInviteCheck] = useState(false);\n  const dispatch = useDispatch();\n\n  const roles = useSelector(state => state.roleReducer.getAllRole);\n  let modifiedRoles = [];\n  if(roles && roles.roles){\n    modifiedRoles = roles.roles.map(e => {\n      return { key: e.role_id , text:e.role_name , value: e.role_name }\n    });\n  }\n  const callBackConfirmation = () => {\n    dispatch(getAllUsers());\n      toastr.success('User Added Successfully');\n      setOpenAddUserModel(false);\n  }\n  const handleForm = () => {\n    const postRoles = selectedRoles.map(e => {\n      return {role_name: e};\n    });\n    const postData = {\n      user_name: email,\n      email: email,\n      phone_number: `+91${mobile}`,\n      password: password,\n      organisation: orgName,\n      organisation_type: orgType,\n      name: name,\n      invite_via_mobile: inviteCheck ? false : smsCheck,\n      invite_via_email: inviteCheck ? false : emailCheck,\n      roles:postRoles\n    };\n    dispatch(createUser(postData, callBackConfirmation));\n  };\n  return (\n    <Wrapper>\n      <Form onSubmit={handleForm}>\n        <Form.Group>\n          <Form.Field\n            id=\"form-input-control-userid\"\n            control={Input}\n            value={usedId}\n            required\n            type=\"email\"\n            onChange={e => setUserId(e.target.value)}\n            label=\"USER ID (EMAIL)\"\n            error={erroObject}\n          />\n          <Form.Field\n            id=\"form-input-control-TempPassword\"\n            control={Input}\n            type=\"password\"\n            value={password}\n            pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$\"\n            required\n            onChange={e => setPassword(e.target.value)}\n            label=\"TEMPORARY PASSWORD\"\n            action=\"Reset\"\n            error={erroObject}\n          />\n        </Form.Group>\n\n        <Form.Group widths=\"equal\">\n          <Form.Field\n            id=\"form-input-control-name\"\n            control={Input}\n            value={name}\n            required\n            onChange={e => setName(e.target.value)}\n            label=\"NAME(FIRST, LAST)\"\n            error={erroObject}\n          />\n          <Form.Field\n            id=\"form-input-control-email\"\n            control={Input}\n            value={email}\n            type=\"email\"\n            onChange={e => setEmail(e.target.value)}\n            required\n            label=\"EMAIL\"\n            error={erroObject}\n          />\n          <Form.Field\n            id=\"form-input-control-mobile\"\n            control={Input}\n            type=\"number\"\n            value={mobile}\n            onChange={e => setMobile(e.target.value)}\n            max=\"9999999999\"\n            maxLength=\"10\"\n            required\n            label=\"MOBILE\"\n            error={erroObject}\n          />\n        </Form.Group>\n\n        <Form.Group widths=\"equal\">\n          <Form.Field\n            control={Select}\n            options={statusOptions}\n            value={status}\n            required\n            label={{\n              children: 'STATUS',\n              htmlFor: 'form-select-control-orgtype'\n            }}\n            onChange={(e, { value }) => setStatus(value)}\n            search\n            searchInput={{ id: 'form-select-control-status' }}\n            error={erroObject}\n          />\n          <Form.Field\n            control={Select}\n            options={organizationTypes}\n            value={orgType}\n            label={{\n              children: 'ORGANIZATION TYPE',\n              htmlFor: 'form-select-control-orgtype'\n            }}\n            onChange={(e, { value }) => setOrgType(value)}\n            search\n            searchInput={{ id: 'form-select-control-orgtype' }}\n            error={erroObject}\n          />\n          <Form.Field\n            control={Select}\n            options={organizations}\n            value={orgName}\n            onChange={(e, { value }) => setOrgName(value)}\n            label={{\n              children: 'ORGANIZATION NAME',\n              htmlFor: 'form-select-control-orgname'\n            }}\n            search\n            searchInput={{ id: 'form-select-control-orgname' }}\n            error={erroObject}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Field>\n            <Checkbox label=\"Send an Invitation to user\" onChange={() => setInviteCheck(!inviteCheck)} />\n          </Form.Field>\n          <Form.Field>\n            <Checkbox label=\"SMS\" disabled={!inviteCheck} onChange={() => setSmaCheck(!smsCheck)} />\n          </Form.Field>\n          <Form.Field>\n            <Checkbox label=\"EMAIL\" disabled={!inviteCheck} onChange={() => setEmailCheck(!emailCheck)} />\n          </Form.Field>\n        </Form.Group>\n        <Form.Group>\n        <Dropdown placeholder='Roles' fluid multiple selection options={modifiedRoles} onChange={(e, {value}) => setSelectedRoles(value)} />\n        </Form.Group>\n        <Button type=\"submit\" floated={'right'} color=\"blue\">\n          Submit\n        </Button>\n        <Button floated={'right'} onClick={() => setOpenAddUserModel(false)}>\n          Cancel\n        </Button>\n      </Form>\n    </Wrapper>\n  );\n};\n\nexport default AddUser;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  border-radius: 5px;\n  border: 1px solid black;\n  .inner {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n`;\n\nconst ViewDetails = () => {\n  return (\n    <Wrapper>\n      <div className=\"inner\">\n        <p>Last Signed On:</p>\n        <p>10:00 am</p>\n        <p>Password Changed on:</p>\n        <p>10:00 am</p>\n      </div>\n      <div className=\"inner\">\n        <p>Last Status Changed On:</p>\n        <p>10:00 am</p>\n        <p>Number od Succcessive Unsuccessful Logins:</p>\n        <p>10:00 am</p>\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default ViewDetails;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n  Form,\n  Input,\n  Checkbox,\n  Button,\n  Select,\n  TextArea,\n  Label,\n  Icon,\n  Dropdown\n} from 'semantic-ui-react';\nimport ViewDetails from './ViewDetails';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllUsers, editUser } from '../../redux/actions/userActions';\nimport { organizationTypes, organizations, statusOptions } from '../../constants/mockValues';\nimport toastr from 'toastr';\n\nconst Wrapper = styled.div`\n  input[type='number']::-webkit-inner-spin-button,\n  input[type='number']::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n  input {\n    background: rgb(78, 102, 137);\n  }\n`;\nconst errObject = {\n  content: 'Please enter a valid email address',\n  pointing: 'below'\n};\n\nconst EditUser = ({ setOpenEditUserModel, selectedRow }) => {\n  console.log('selectedRow', selectedRow);\n  const [erroObject, setErrorObject] = useState(false);\n  const [usedId, setUserId] = useState(Object.keys(selectedRow).length ? selectedRow.user_name : '');\n  const [name, setName] = useState(Object.keys(selectedRow).length ? selectedRow.name : '');\n  const [email, setEmail] = useState(Object.keys(selectedRow).length ? selectedRow.email : '');\n  const [mobile, setMobile] = useState(Object.keys(selectedRow).length ? parseInt(selectedRow.phone_number, 10) : null);\n  const [status, setStatus] = useState(Object.keys(selectedRow).length ? (selectedRow.active ? 'active' : 'inactive') : '');\n  const [orgType, setOrgType] = useState(Object.keys(selectedRow).length ? selectedRow.organisation_type : '');\n  const [orgName, setOrgName] = useState(Object.keys(selectedRow).length ? selectedRow.organisation : '');\n  const getDefaultRoles = () => {\n    if(Object.keys(selectedRow).length && selectedRow.roles && selectedRow.roles.length) {\n      return selectedRow.roles.map(e => e.role_name);\n    }\n  }\n  const [selectedRoles,setSelectedRoles] = useState(getDefaultRoles);\n  const dispatch = useDispatch();\n\n  const roles = useSelector(state => state.roleReducer.getAllRole);\n  let modifiedRoles = [];\n  if(roles && roles.roles){\n    modifiedRoles = roles.roles.map(e => {\n      return { key: e.role_id , text:e.role_name , value: e.role_name }\n    });\n  }\n  const callBackConfirmation = () => {\n    dispatch(getAllUsers());\n      toastr.success('User updated Successfully');\n      setOpenEditUserModel(false);\n  }\n  const handleForm = () => {\n    const postRoles = selectedRoles.map(e => {\n      return {role_name: e};\n    });\n    const postData = {\n      user_name:usedId,\n      email: email,\n      phone_number: `+91${mobile}`,\n      organisation: orgName,\n      organisation_type:orgType,\n      name: name,\n      roles:postRoles\n    };\n    dispatch(editUser(postData,email,callBackConfirmation));\n  };\n  // TODO: <ViewDetails /> component to be added below form tag once data available\n  /**\n   * \n   * <Form.Group>\n          <Form.Field>\n            <Checkbox label=\"Email as Verified\" />\n          </Form.Field>\n          <Form.Field>\n            <Checkbox label=\"Mobile as Verified\" />\n          </Form.Field>\n        </Form.Group>\n   */\n  return (\n    <Wrapper>\n      <Form onSubmit={handleForm}>\n        <Form.Group>\n          <Form.Field\n            id=\"form-input-control-userid\"\n            control={Input}\n            value={usedId}\n            required\n            type=\"email\"\n            onChange={e => setUserId(e.target.value)}\n            label=\"USER ID (EMAIL)\"\n            error={erroObject}\n          />\n        </Form.Group>\n\n        <Form.Group widths=\"equal\">\n          <Form.Field\n            id=\"form-input-control-name\"\n            control={Input}\n            value={name}\n            required\n            onChange={e => setName(e.target.value)}\n            label=\"NAME(FIRST, LAST)\"\n            error={erroObject}\n          />\n          <Form.Field\n            id=\"form-input-control-email\"\n            control={Input}\n            value={email}\n            type=\"email\"\n            onChange={e => setEmail(e.target.value)}\n            required\n            label=\"EMAIL\"\n            error={erroObject}\n          />\n          <Form.Field\n            id=\"form-input-control-mobile\"\n            control={Input}\n            type=\"number\"\n            value={mobile}\n            onChange={e => setMobile(e.target.value)}\n            max=\"999999999999\"\n            maxLength=\"10\"\n            required\n            label=\"MOBILE\"\n            error={erroObject}\n          />\n        </Form.Group>\n\n        <Form.Group widths=\"equal\">\n          <Form.Field\n            control={Select}\n            options={statusOptions}\n            value={status}\n            label={{\n              children: 'STATUS',\n              htmlFor: 'form-select-control-orgtype'\n            }}\n            onChange={(e, { value }) => setStatus(value)}\n            search\n            searchInput={{ id: 'form-select-control-status' }}\n            error={erroObject}\n          />\n          <Form.Field\n            control={Select}\n            options={organizationTypes}\n            value={orgType}\n            label={{\n              children: 'ORGANIZATION TYPE',\n              htmlFor: 'form-select-control-orgtype'\n            }}\n            onChange={(e, { value }) => setOrgType(value)}\n            search\n            searchInput={{ id: 'form-select-control-orgtype' }}\n            error={erroObject}\n          />\n          <Form.Field\n            control={Select}\n            options={organizations}\n            value={orgName}\n            onChange={(e, { value }) => setOrgName(value)}\n            label={{\n              children: 'ORGANIZATION NAME',\n              htmlFor: 'form-select-control-orgname'\n            }}\n            search\n            searchInput={{ id: 'form-select-control-orgname' }}\n            error={erroObject}\n          />\n        </Form.Group>\n        <Form.Field label=\"ROLES / GROUPS\" />\n        <Form.Group>\n        <Dropdown placeholder='Roles' fluid multiple selection options={modifiedRoles} defaultValue={selectedRoles} onChange={(e, {value}) => setSelectedRoles(value)} />\n        </Form.Group>\n        <Button type=\"submit\" floated={'right'} color=\"blue\">\n          Save\n        </Button>\n        <Button floated={'right'} onClick={() => setOpenEditUserModel(false)}>\n          Cancel\n        </Button>\n      </Form>\n    </Wrapper>\n  );\n};\n\nexport default EditUser;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n  Form,\n  Input,\n  Button\n} from 'semantic-ui-react';\nimport { resetPassword } from '../../redux/actions/userActions';\nimport {useDispatch, useSelector } from 'react-redux';\nimport toastr from 'toastr';\n\nconst Wrapper = styled.div`\n  input {\n    background: rgb(78, 102, 137);\n  }\n`;\n\nconst ResetPassword = ({setopenRestPasswordModel, selectedRow}) => {\n  console.log('selectedRow', selectedRow);\n  const [usedId, setUserId] = useState(Object.keys(selectedRow).length ? selectedRow.email : '');\n  const [password, setPassword] = useState(Object.keys(selectedRow).length ? selectedRow.password : '');\n  const dispatch = useDispatch();\n\n  const restResponse = useSelector(state=> state.userReducer.resetData);\n  useEffect(() => {\n    if(restResponse === 200) {\n      toastr.success('Reset Successfull');\n      setopenRestPasswordModel(false);\n    }\n  }, [restResponse])\n  const hanldeReset =() => {\n    dispatch(resetPassword({username: usedId, password: password}));\n  }\n  return (\n    <Wrapper>\n      <Form onSubmit={hanldeReset}>\n        <Form.Group>\n          <Form.Field\n            id=\"form-input-control-userid\"\n            control={Input}\n            value={usedId}\n            required\n            onChange={(e) => setUserId(e.target.value)}\n            label=\"USER ID (EMAIL)\"\n          />\n          <Form.Field\n            id=\"form-input-control-TempPassword\"\n            control={Input}\n            type=\"password\"\n            value={password}\n            pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$\"\n            required\n            onChange={(e) => setPassword(e.target.value)}\n            label=\"TEMPORARY PASSWORD\"\n          />\n        </Form.Group>\n        <Button type=\"submit\" floated={\"right\"} color=\"blue\">Submit</Button>\n        <Button floated={\"right\"} onClick={() => setopenRestPasswordModel(false)}>Cancel</Button>\n      </Form>\n    </Wrapper>\n  );\n};\n\nexport default ResetPassword;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Container, Button, Modal, Pagination } from 'semantic-ui-react';\nimport MainHeader from '../components/common/Header';\nimport FilterSection from '../components/common/FilterSection';\nimport TableComponent from '../components/UserComponents/UserTableComponent';\nimport DownHead from '../components/common/DownHead';\nimport AddUser from '../components/UserComponents/AddUserForm';\nimport EditUser from '../components/UserComponents/EditUserFor';\nimport ResetPassword from '../components/UserComponents/ResetPassword';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllUsers } from '../redux/actions/userActions';\nimport {getAllRoles } from '../redux/actions/roleActions';\n\n\nconst Wrapper = styled.div`\n  .dashBoardClass{\n    max-width: 1520px;\n    width: 100%;\n    height: 100%;\n    margin: 0 auto;\n  }\n`;\n\n\nconst FilterWrapper = styled.div`\n  margin: 45px 135px 0px;\n`;\n\nconst TableWrapper = styled.div`\n  margin: 15px 135px 0px;\n`;\nconst PaginationWrapper = styled.div`\n  margin: 15px 135px 0px;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  p {\n    margin-right: 30px;\n  }\n`;\n\n//rgb(245,247,250) below layer color whitesmoke\nconst Dashboard = () => {\n  const [openAddUserModel, setOpenAddUserModel] = useState(false);\n  const [openEditUserModel, setOpenEditUserModel] = useState(false);\n  const [openRestPasswordModel, setopenRestPasswordModel] = useState(false);\n  const [selectedRow, setSelectedRow] = useState([]);\n  const [selectedColumnValues, setSelectedColumnsValues] = useState([]);\n  const disptch = useDispatch();\n\n  const { users, total_users, active_users, this_month_users } = useSelector(state => state.userReducer.getAllUser);\n\n  const statisTicalData = () => {\n    if(total_users) {\n      return [\n        { lable: 'Total User', value: total_users },\n        { lable: 'This Month', value: this_month_users },\n        { lable: 'Active', value: active_users }\n      ];\n    }\n  }\n\n  useEffect(() => {\n    disptch(getAllUsers());\n    disptch(getAllRoles());\n  }, []);\n\n  const handlePageChange = (e, { activePage }) => {\n    disptch(getAllUsers(activePage === 1 ? 0 : activePage -1));\n  }\n\n  return (\n    <Wrapper>\n    <Container fluid>\n      <MainHeader />\n      <DownHead\n        headingText=\"User Managment\"\n        Buttons={\n          <Button color=\"blue\" onClick={() => setOpenAddUserModel(true)}>\n            New +\n          </Button>\n        }\n        StatisticCardData={statisTicalData()}\n      />\n      <div className=\"dashBoardClass\">\n      <FilterWrapper>\n        <FilterSection FilterHeadText=\"All Users\" selector=\"user\" selectedColumns={ setSelectedColumnsValues } />\n      </FilterWrapper>\n      <TableWrapper>\n        <TableComponent\n          setOpenEditUserModel={setOpenEditUserModel}\n          setopenRestPasswordModel={setopenRestPasswordModel}\n          userData={users}\n          selectedRow={setSelectedRow}\n          selectedColumnValues={ selectedColumnValues }\n        />\n      </TableWrapper>\n      <PaginationWrapper>\n        <p>{`Displaying 1-5 of ${total_users} records`}</p>\n        <Pagination\n          boundaryRange={0}\n          defaultActivePage={1}\n          ellipsisItem={null}\n          firstItem={null}\n          lastItem={null}\n          siblingRange={1}\n          totalPages={Math.ceil(total_users/5)}\n          onPageChange={handlePageChange}\n        />\n      </PaginationWrapper>\n      </div>\n      <Modal\n        open={openAddUserModel}\n        closeOnDimmerClick={false}\n        closeOnEscape={false}\n      >\n        <Modal.Header>Add New User</Modal.Header>\n        <Modal.Content>\n          <AddUser setOpenAddUserModel={setOpenAddUserModel} />\n        </Modal.Content>\n        <Modal.Actions></Modal.Actions>\n      </Modal>\n      <Modal\n        open={openEditUserModel}\n        closeOnDimmerClick={false}\n        closeOnEscape={false}\n      >\n        <Modal.Header>View/Edit User</Modal.Header>\n        <Modal.Content>\n          <EditUser setOpenEditUserModel={setOpenEditUserModel} selectedRow={selectedRow} />\n        </Modal.Content>\n        <Modal.Actions></Modal.Actions>\n      </Modal>\n      <Modal\n        open={openRestPasswordModel}\n        closeOnDimmerClick={false}\n        closeOnEscape={false}\n      >\n        <Modal.Header>Reset Password</Modal.Header>\n        <Modal.Content>\n          <ResetPassword setopenRestPasswordModel={setopenRestPasswordModel} selectedRow={selectedRow} />\n        </Modal.Content>\n        <Modal.Actions></Modal.Actions>\n      </Modal>\n    </Container>\n    </Wrapper>\n  );\n};\nexport default Dashboard;\n","import React from 'react';\nimport styled from 'styled-components';\nimport logo from '../../assets/logo.PNG';\n\nconst Wrapper = styled.div`\ndisplay: flex;\nalign-items: center;\nfont-weight: bold;\nmargin-bottom: 20px;\n    img {\n        width: 25px;\n        margin-right: 10px;\n    }\n`;\n\nconst Logo = () => {\n    return(\n        <Wrapper>\n            <img src={logo} alt=\"logo\" /> <div>FUNDSCORNER</div>\n        </Wrapper>\n    )\n}\n\nexport default Logo;","import React from 'react';\nimport styled from 'styled-components';\nimport logo from '../../assets/logo.PNG';\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  font-weight: bold;  \n  margin-bottom: 20px;\n  h1 {\n    margin: 0;\n  }\n`;\n\nconst HeadDescription = ({headText, description}) => {\n  return (\n    <Wrapper>\n      <h1>{headText}</h1>\n      <p>{description}</p>\n    </Wrapper>\n  );\n};\n\nexport default HeadDescription;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    display:flex;\n    align-items: center;\n    margin-top: 20px;\n    margin-left:100px;\n`;\n\n\nconst QueryRouter = ({text, linkText, linkTo}) => {\n    return(\n        <Wrapper>\n        {text}{'  '}<a href={linkTo}>{linkText}</a>\n        </Wrapper>\n    )\n}\n\nexport default QueryRouter;","import React from 'react';\nimport styled from 'styled-components';\nimport {Form, Button} from 'semantic-ui-react';\nimport Logo from '../components/common/LogoWrapper';\nimport HeadDescription from '../components/common/HeadDescription';\nimport QueryRouter from '../components/common/QueryRouter';\n\nconst Wrapper = styled.div`\n  margin: auto;\n  width: 400px;\n  left:50%;\n  top:50%;\n  margin-top:5%;\n  background: whitesmoke;\n  padding: 20px;\n`;\n\nconst Login = () => {\n  return (\n    <Wrapper>\n      <Logo />\n      <HeadDescription\n        headText=\"Login\"\n        description=\"Your Supply chain finance partner\"\n      />\n      <Form>\n        <Form.Field>\n          <label>EMAIL ADDRESS</label>\n          <input type=\"email\" required/>\n        </Form.Field>\n        <Form.Field>\n          <label>PASSWORD</label>\n          <input type=\"password\" required/>\n        </Form.Field>\n        <Button type=\"submit\" fluid color=\"blue\" onClick={() => window.location.href=\"/user\"}>Login</Button>\n      </Form>\n      <QueryRouter text=\"New User ? \" linkText=\"Register Here\" linkTo=\"/signup\"/>\n    </Wrapper>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport styled from 'styled-components';\nimport {Form, Button} from 'semantic-ui-react';\nimport Logo from '../components/common/LogoWrapper';\nimport HeadDescription from '../components/common/HeadDescription';\nimport QueryRouter from '../components/common/QueryRouter';\n\nconst Wrapper = styled.div`\n  margin: auto;\n  width: 400px;\n  left:50%;\n  top:50%;\n  margin-top:5%;\n  background: whitesmoke;\n  padding: 20px;\n  input[type='number']::-webkit-inner-spin-button,\n  input[type='number']::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n`;\n\nconst Signup = () => {\n  return (\n    <Wrapper>\n      <Logo />\n      <HeadDescription\n        headText=\"Get started here\"\n        description=\"Your Supply chain finance partner\"\n      />\n      <Form>\n        <Form.Field>\n          <label>FULL NAME</label>\n          <input type=\"text\" required/>\n        </Form.Field>\n        <Form.Field>\n          <label>MOBILE</label>\n          <input type=\"number\" required/>\n        </Form.Field>\n        <Form.Field>\n          <label>EMAIL ADDRESS</label>\n          <input type=\"email\" required/>\n        </Form.Field>\n        <Form.Field>\n          <label>PASSWORD</label>\n          <input type=\"password\" required/>\n        </Form.Field>\n        <Form.Field>\n          <label>ORGANIZATION NAME</label>\n          <input type=\"text\" required/>\n        </Form.Field>\n        <Button type=\"submit\" fluid color=\"blue\" onClick={() => window.location.href=\"/user\"}>Login</Button>\n      </Form>\n      <QueryRouter text=\"Already Have an Account ? \" linkText=\"Login\" linkTo=\"/login\" />\n    </Wrapper>\n  );\n};\n\nexport default Signup;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Table, Label } from \"semantic-ui-react\";\nimport { Dropdown, Loader } from 'semantic-ui-react';\nimport { RolesHeadData } from '../../constants/tableConstants';\n\nconst Wrapper = styled.div`\n  .hideColumn {\n    display: none;\n  }\n`;\nconst DropDownSpan = styled.span`\n  color: blue;\n`;\n\n\nconst DateFormater = (date) => `${date.getDate()}-${date.getMonth() + 1}-${date.getFullYear()}`;\n\nconst RolesTableComponent = ({\n    roleData,\n    setOpenEditRoleModel,\n    selectedRow,\n    selectedColumnValues\n}) => {\n    const [tableHead, setTableHead] = useState(RolesHeadData);\n\n    useEffect(() => {\n        if (selectedColumnValues.length) {\n            setTableHead(selectedColumnValues)\n        }\n    }, [selectedColumnValues]);\n    const handleDropdownChange = (e, value) => {\n        if (value === 'edit role') {\n            setOpenEditRoleModel(true);\n            selectedRow(e);\n        }\n    };\n    return (\n        <Wrapper>\n            <Table basic=\"very\">\n                <Table.Header>\n                    <Table.Row>\n                        {\n                            tableHead.map(e => {\n                                return (\n                                    <Table.HeaderCell key={e}>{e}</Table.HeaderCell>\n                                )\n                            })\n                        }\n                    </Table.Row>\n                </Table.Header>\n\n\n\n                <Table.Body>\n                    {\n                        roleData && roleData.length ? (\n                            roleData.map(e => {\n                                return (\n                                    <Table.Row>\n                                        <Table.Cell className={tableHead.includes('ROLE ID') ? '' : 'hideColumn'}>{e.role_id}</Table.Cell>\n                                        <Table.Cell className={tableHead.includes('MODIFIED DATE') ? '' : 'hideColumn'}> {DateFormater(new Date(e.created_at))}</Table.Cell>\n                                        <Table.Cell className={tableHead.includes('ROLE NAME') ? '' : 'hideColumn'}>{e.role_name}</Table.Cell>\n                                        <Table.Cell className={tableHead.includes('ORG TYPE') ? '' : 'hideColumn'}>{e.org_type}</Table.Cell>\n                                        <Table.Cell className={tableHead.includes('DESCRIPTION') ? '' : 'hideColumn'}>{e.role_description}</Table.Cell>\n\n                                        <Table.Cell className={tableHead.includes('USERS') ? '' : 'hideColumn'}>{e.users_count}</Table.Cell>\n                                        <Table.Cell className={tableHead.includes('STATUS') ? '' : 'hideColumn'}>{e.active ? 'active' : 'inactive'}</Table.Cell>\n                                        <Table.Cell className={tableHead.includes('Action') ? '' : 'hideColumn'}>\n                                            <DropDownSpan>\n                                                <Dropdown text=\"Action\">\n                                                    <Dropdown.Menu>\n                                                        <Dropdown.Item\n                                                            onClick={() =>\n                                                                handleDropdownChange(e, 'edit role')\n                                                            }\n                                                        >\n                                                            Edit Roles\n                                                        </Dropdown.Item>\n                                                    </Dropdown.Menu>\n                                                </Dropdown>\n                                            </DropDownSpan>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                )\n                            })) : <Table.Row><Loader active /></Table.Row>\n                    }\n                </Table.Body>\n            </Table>\n        </Wrapper>\n    );\n};\n\nexport default RolesTableComponent;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Table, Label, Checkbox, Loader } from \"semantic-ui-react\";\nimport { AddRoleHeadData } from '../../constants/tableConstants';\nimport M from \"minimatch\";\n\n\nconst Wrapper = styled.div``;\n\n\nconst AddRoleTableForm = ({ groupListData }) => {\n\n    return (\n        <Wrapper>\n            <Table basic=\"very\">\n                <Table.Header>\n                    <Table.Row>\n                        {\n                            AddRoleHeadData.map(e => {\n                                return (\n                                    <Table.HeaderCell key={e}>{e}</Table.HeaderCell>\n                                )\n                            })\n                        }\n                    </Table.Row>\n                </Table.Header>\n\n\n                <Table.Body>\n                    {\n                        groupListData.map(e => {\n                            {\n                                e.functions.map(m => {\n                                    m.actions = { \"create\": false, \"edit\": false, \"view\": false, \"delete\": false };\n                                })\n                            }\n\n                            return (\n                                <Table.Row>\n                                    <Table.Cell>{e.group_name}</Table.Cell>\n                                    <Table.Cell>\n\n                                        {e.functions.map(m => {\n                                            return (\n                                                <Table.Row>\n                                                    <Table.Cell>{m.function_id}</Table.Cell>\n                                                </Table.Row>\n                                            )\n                                        })}\n                                    </Table.Cell>\n                                    <Table.Cell>\n                                        {e.functions.map(m => {\n                                            return (\n                                                <Table.Row>\n                                                    <Table.Cell>{m.function_name}</Table.Cell>\n                                                </Table.Row>\n                                            )\n                                        })}\n                                    </Table.Cell>\n                                    <Table.Cell>\n                                        {e.functions.map(m => {\n                                            return (\n                                                <Table.Row>\n                                                    <Table.Cell>\n                                                        <Checkbox toggle\n                                                            onChange={(e) => {\n                                                                m.actions.create = !m.actions.create\n\n                                                            }} />\n                                                    </Table.Cell>\n                                                </Table.Row>\n                                            )\n                                        })}\n                                    </Table.Cell>\n                                    <Table.Cell>\n                                        {e.functions.map(m => {\n                                            return (\n                                                <Table.Row>\n                                                    <Table.Cell><Checkbox toggle\n                                                        onChange={(e) => {\n                                                            m.actions.edit = !m.actions.edit\n\n                                                        }} /></Table.Cell>\n                                                </Table.Row>\n                                            )\n                                        })}\n                                    </Table.Cell>\n                                    <Table.Cell>\n                                        {e.functions.map(m => {\n                                            return (\n                                                <Table.Row>\n                                                    <Table.Cell><Checkbox toggle\n                                                        onChange={(e) => {\n                                                            m.actions.view = !m.actions.view\n\n                                                        }} /></Table.Cell>\n                                                </Table.Row>\n                                            )\n                                        })}\n                                    </Table.Cell>\n                                    <Table.Cell>\n\n                                        {e.functions.map(m => {\n                                            return (\n                                                <Table.Row>\n                                                    <Table.Cell><Checkbox toggle\n                                                        onChange={(e) => {\n                                                            m.actions.delete = !m.actions.delete\n\n                                                        }} /></Table.Cell>\n                                                </Table.Row>\n                                            )\n                                        })}\n                                    </Table.Cell>\n\n\n                                </Table.Row>\n                            )\n                        })\n                    }\n                </Table.Body>\n            </Table>\n        </Wrapper>\n    );\n};\n\nexport default AddRoleTableForm;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n    Form,\n    Input,\n    TextArea,\n    Button,\n    Select,\n    Container\n} from 'semantic-ui-react';\nimport AddRoleTableForm from './AddRoleTableForm'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllRoles, createRole, getRoleGroup } from '../../redux/actions/roleActions';\nimport toastr from 'toastr';\nimport { organizationTypes } from '../../constants/mockValues';\n\n\nconst Wrapper = styled.div`\n  input[type='number']::-webkit-inner-spin-button,\n  input[type='number']::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n  input {\n    background: rgb(78, 102, 137);\n  }\n  .Descriptionfield{\n      width:80%\n  }\n`;\n\n\nconst AddRole = ({\n    setOpenAddRoleModel\n}) => {\n    const [erroObject, setErrorObject] = useState(false);\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [orgType, setOrgType] = useState();\n    const [groupListData, setGroupListData] = useState();\n\n    const dispatch = useDispatch();\n\n    // const roleCreated = useSelector(state => state.roleReducer.createRole);\n    const allGroupListData = useSelector(state => state.roleReducer.getAllRoleList);\n\n    const callBackConfirmation = () => {\n        dispatch(getAllRoles());\n        toastr.success('Role Added Successfully');\n        setOpenAddRoleModel(false);\n    }\n    const handleForm = () => {\n        const postData = {\n            role_name: name,\n            role_description: description,\n            org_type: orgType,\n            group_permissions: allGroupListData,\n        }\n        console.log('RERE', postData);\n        if (postData.group_permissions != undefined) {\n            dispatch(createRole(postData, callBackConfirmation));\n        }\n\n    }\n    return (\n        <Wrapper>\n            <Form onSubmit={handleForm}>\n                <Form.Group>\n                    <Form.Field\n                        id=\"form-input-control-name\"\n                        control={Input}\n                        value={name}\n                        required\n                        onChange={(e) => setName(e.target.value)}\n                        label=\"NAME\"\n                        error={erroObject}\n                    />\n                    <Container>\n                        <Form.Field\n                            className='Descriptionfield'\n                            id=\"form-input-control-name\"\n                            control={Input}\n                            value={description}\n                            required\n                            onChange={(e) => setDescription(e.target.value)}\n                            label=\"DESCRIPTION\"\n                            error={erroObject}\n                        />\n                    </Container>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Field\n                        control={Select}\n                        options={organizationTypes}\n                        value={orgType}\n                        label={{\n                            children: 'ORGANIZATION TYPE',\n                            htmlFor: 'form-select-control-orgtype'\n                        }}\n                        onChange={(e, { value }) => setOrgType(value)}\n                        search\n                        searchInput={{ id: 'form-select-control-orgtype' }}\n                        error={erroObject}\n                    />\n                </Form.Group>\n                <Form.Group className=\"tableForm\">\n                    <Container>\n                        <AddRoleTableForm\n                            groupListData={allGroupListData}\n                            onChange={(e, { groupListData }) => setGroupListData(groupListData)}\n                        />\n                    </Container>\n                </Form.Group>\n                <Button type=\"submit\" floated={\"right\"} color=\"blue\">Submit</Button>\n                <Button floated={\"right\"} onClick={() => setOpenAddRoleModel(false)}>Cancel</Button>\n            </Form>\n\n        </Wrapper>\n    );\n}\nexport default AddRole;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Table, Label, Checkbox, Loader } from \"semantic-ui-react\";\nimport { AddRoleHeadData } from '../../constants/tableConstants';\nimport M from \"minimatch\";\nimport { create } from \"istanbul-reports\";\n\n\nconst Wrapper = styled.div``;\n\nconst EditRoleTableForm = ({ allGroupListData }) => {\n\n    return (\n        <Wrapper>\n            <Table basic=\"very\">\n                <Table.Header>\n                    <Table.Row>\n                        {\n                            AddRoleHeadData.map(e => {\n                                return (\n                                    <Table.HeaderCell key={e}>{e}</Table.HeaderCell>\n                                )\n                            })\n                        }\n                    </Table.Row>\n                </Table.Header>\n\n\n                <Table.Body>\n                    {\n                        allGroupListData != undefined ?\n                            allGroupListData.map(e => {\n\n                                return (\n                                    <Table.Row>\n                                        <Table.Cell>{e.group_name}</Table.Cell>\n                                        <Table.Cell>\n\n                                            {e.functions.map(m => {\n                                                return (\n                                                    <Table.Row>\n                                                        <Table.Cell>{m.function_id}</Table.Cell>\n                                                    </Table.Row>\n                                                )\n                                            })}\n                                        </Table.Cell>\n                                        <Table.Cell>\n                                            {e.functions.map(m => {\n                                                return (\n                                                    <Table.Row>\n                                                        <Table.Cell>{m.function_name}</Table.Cell>\n                                                    </Table.Row>\n                                                )\n                                            })}\n                                        </Table.Cell>\n                                        <Table.Cell>\n                                            {e.functions.map(m => {\n                                                return (\n                                                    <Table.Row>\n                                                        <Table.Cell>\n                                                            <Checkbox\n                                                                toggle\n                                                                value={m.actions.create}\n                                                                defaultChecked={m.actions.create}\n                                                                onChange={(e) => {\n                                                                    m.actions.create = !m.actions.create\n\n                                                                }} />\n                                                        </Table.Cell>\n                                                    </Table.Row>\n                                                )\n                                            })}\n                                        </Table.Cell>\n                                        <Table.Cell>\n                                            {e.functions.map(m => {\n                                                return (\n                                                    <Table.Row>\n                                                        <Table.Cell>\n                                                            <Checkbox toggle defaultChecked={m.actions.edit}\n                                                                onChange={(e) => {\n                                                                    m.actions.edit = !m.actions.edit\n\n                                                                }} />\n                                                        </Table.Cell>\n                                                    </Table.Row>\n                                                )\n                                            })}\n                                        </Table.Cell>\n                                        <Table.Cell>\n                                            {e.functions.map(m => {\n                                                return (\n                                                    <Table.Row>\n                                                        <Table.Cell>\n                                                            <Checkbox toggle defaultChecked={m.actions.view}\n                                                                onChange={(e) => {\n                                                                    m.actions.view = !m.actions.view\n\n                                                                }} />\n                                                        </Table.Cell>\n                                                    </Table.Row>\n                                                )\n                                            })}\n                                        </Table.Cell>\n                                        <Table.Cell>\n                                            {e.functions.map(m => {\n                                                return (\n                                                    <Table.Row>\n                                                        <Table.Cell>\n                                                            <Checkbox toggle defaultChecked={m.actions.delete}\n                                                                onChange={(e) => {\n                                                                    m.actions.delete = !m.actions.delete\n\n                                                                }} />\n                                                        </Table.Cell>\n                                                    </Table.Row>\n                                                )\n                                            })}\n                                        </Table.Cell>\n\n                                    </Table.Row>\n                                )\n                            }) : <Table.Row><Loader active /></Table.Row>\n                    }\n                </Table.Body>\n            </Table>\n        </Wrapper>\n    );\n};\n\nexport default EditRoleTableForm;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n    Form,\n    Input,\n    TextArea,\n    Button,\n    Select,\n    Container\n} from 'semantic-ui-react';\nimport EditRoleTableForm from './EditRoleTableForm'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllRoles, editRole, getRoleGroup } from '../../redux/actions/roleActions';\nimport toastr from 'toastr';\nimport { organizationTypes } from '../../constants/mockValues';\n\n\nconst Wrapper = styled.div`\n  input[type='number']::-webkit-inner-spin-button,\n  input[type='number']::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n  input {\n    background: rgb(78, 102, 137);\n  }\n  .Descriptionfield{\n      width:80%\n  }\n`;\n\nconst errObject = {\n    content: 'Please enter a valid description ',\n    pointing: 'below'\n};\nconst EditRole = ({ setOpenEditRoleModel, selectedRow }) => {\n    console.log({ selectedRow });\n    const [erroObject, setErrorObject] = useState(false);\n    const [name, setName] = useState(Object.keys(selectedRow).length ? selectedRow.role_name : '');\n    const [description, setDescription] = useState(Object.keys(selectedRow).length ? selectedRow.role_description : '');\n    const [orgType, setOrgType] = useState(Object.keys(selectedRow).length ? selectedRow.org_type : '');\n    const [allGroupListData, setAllGroupListData] = useState(Object.keys(selectedRow).length ? selectedRow.group_permissions : '');\n\n\n    const dispatch = useDispatch();\n    // const roleEdited = useSelector(state => state.roleReducer.editRole);\n    // const allRoleGroupListData = useSelector(state => state.roleReducer.getAllRoleList);\n\n    const callBackConfirmation = () => {\n        dispatch(getAllRoles());\n        toastr.success('Role Edited Successfully');\n        setOpenEditRoleModel(false);\n    }\n    const handleForm = () => {\n        const postData = {\n            role_name: name,\n            role_description: description,\n            org_type: orgType,\n            group_permissions: allGroupListData\n\n        }\n        dispatch(editRole(postData, name, callBackConfirmation));\n\n    }\n\n\n    return (\n        <Wrapper>\n            <Form onSubmit={handleForm}>\n                <Form.Group>\n                    <Form.Field\n                        disabled\n                        id=\"form-input-control-name\"\n                        control={Input}\n                        value={name}\n                        required\n                        onChange={(e) => setName(e.target.value)}\n                        label=\"NAME\"\n                        error={erroObject}\n                    />\n                    <Container>\n                        <Form.Field\n                            className='Descriptionfield'\n                            id=\"form-input-control-name\"\n                            control={Input}\n                            value={description}\n                            required\n                            onChange={(e) => setDescription(e.target.value)}\n                            label=\"DESCRIPTION\"\n                            error={erroObject}\n                        />\n                    </Container>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Field\n                        control={Select}\n                        options={organizationTypes}\n                        value={orgType}\n                        label={{\n                            children: 'ORGANIZATION TYPE',\n                            htmlFor: 'form-select-control-orgtype'\n                        }}\n                        onChange={(e, { value }) => setOrgType(value)}\n                        search\n                        searchInput={{ id: 'form-select-control-orgtype' }}\n                        error={erroObject}\n                    />\n                </Form.Group>\n                <Form.Group className=\"tableForm\">\n                    <Container>\n                        <EditRoleTableForm\n                            allGroupListData={allGroupListData}\n                            onChange={(e, { allGroupListData }) => setAllGroupListData(allGroupListData)} />\n                    </Container>\n                </Form.Group>\n                <Button type=\"submit\" floated={\"right\"} color=\"blue\">Submit</Button>\n                <Button floated={\"right\"} onClick={() => setOpenEditRoleModel(false)}>Cancel</Button>\n            </Form>\n\n        </Wrapper>\n    );\n}\nexport default EditRole;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Container, Button, Modal, Pagination } from 'semantic-ui-react';\nimport MainHeader from '../components/common/Header';\nimport FilterSection from '../components/common/FilterSection';\nimport RolesTableComponent from '../components/RolesComponents/RolesTableComponent';\nimport DownHead from '../components/common/DownHead';\nimport AddRole from '../components/RolesComponents/AddRoleForm'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllRoles, getRoleGroup } from '../redux/actions/roleActions';\nimport EditRole from '../components/RolesComponents/EditRoleForm';\n\n\nconst Wrapper = styled.div`\n  .dashBoardClass{\n    max-width: 1520px;\n    width: 100%;\n    height: 100%;\n    margin: 0 auto;\n  }\n`;\n\nconst FilterWrapper = styled.div`\n  margin: 45px 135px 0px;\n`;\n\nconst TableWrapper = styled.div`\n  margin: 15px 135px 0px;\n`;\nconst PaginationWrapper = styled.div`\n  margin: 15px 135px 0px;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  p {\n    margin-right: 30px;\n  }\n`;\n//rgb(245,247,250) below layer color whitesmoke\n\n\nconst RoleDashboard = () => {\n    const [openAddRoleModel, setOpenAddRoleModel] = useState(false);\n    const [openEditRoleModel, setOpenEditRoleModel] = useState(false);\n    const [selectedColumnValues, setSelectedColumnsValues] = useState([]);\n    const [selectedRow, setSelectedRow] = useState([]);\n\n    const disptch = useDispatch();\n\n    const { roles, total_roles, active_roles, this_month_roles } = useSelector(state => state.roleReducer.getAllRole);\n    // const allGroupListData = useSelector(state => state.roleReducer.getAllRoleList);\n    const statisTicalData = () => {\n        if (total_roles) {\n            return [\n                { lable: 'Total Roles', value: total_roles },\n                { lable: 'This Month', value: this_month_roles },\n                { lable: 'Active', value: active_roles }\n            ];\n        }\n    }\n\n    useEffect(() => {\n        disptch(getAllRoles());\n        disptch(getRoleGroup());\n    }, []);\n\n    const handlePageChange = (e, { activePage }) => {\n        disptch(getAllRoles(activePage === 1 ? 0 : activePage - 1));\n    }\n\n    return (\n        <Wrapper>\n            <Container fluid>\n                <MainHeader />\n                <DownHead\n                    headingText=\"Role Managment\"\n                    Buttons={\n                        <Button color=\"blue\" onClick={() => setOpenAddRoleModel(true)}>\n                            New +\n          </Button>\n                    }\n                    StatisticCardData={statisTicalData()}\n\n                />\n                <div className=\"dashBoardClass\">\n                    <FilterWrapper>\n                        <FilterSection FilterHeadText=\"All Roles\" selector=\"roles\" selectedColumns={setSelectedColumnsValues} />\n                    </FilterWrapper>\n                    <TableWrapper>\n                        <RolesTableComponent\n                            setOpenEditRoleModel={setOpenEditRoleModel}\n                            roleData={roles}\n                            selectedRow={setSelectedRow}\n                            selectedColumnValues={selectedColumnValues}\n                        />\n                    </TableWrapper>\n                    <PaginationWrapper>\n                        <p>{`Displaying 1-5 of ${total_roles}records`}</p>\n                        <Pagination\n                            boundaryRange={0}\n                            defaultActivePage={1}\n                            ellipsisItem={null}\n                            firstItem={null}\n                            lastItem={null}\n                            siblingRange={1}\n                            totalPages={Math.ceil(total_roles / 5)}\n                            onPageChange={handlePageChange}\n\n                        />\n                    </PaginationWrapper>\n                </div>\n                <Modal\n                    open={openAddRoleModel}\n                    closeOnDimmerClick={false}\n                    closeOnEscape={false}\n                >\n                    <Modal.Header>Add New Role</Modal.Header>\n                    <Modal.Content>\n                        <AddRole\n                            setOpenAddRoleModel={setOpenAddRoleModel}\n                        />\n                    </Modal.Content>\n                    <Modal.Actions></Modal.Actions>\n                </Modal>\n                <Modal\n                    open={openEditRoleModel}\n                    closeOnDimmerClick={false}\n                    closeOnEscape={false}\n                >\n                    <Modal.Header>View/Edit Role</Modal.Header>\n                    <Modal.Content>\n                        <EditRole setOpenEditRoleModel={setOpenEditRoleModel} selectedRow={selectedRow} />\n                    </Modal.Content>\n                    <Modal.Actions></Modal.Actions>\n                </Modal>\n            </Container>\n        </Wrapper>\n    );\n};\nexport default RoleDashboard;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport Dashboard from './pages/Dashboard';\nimport Login from './pages/Login';\nimport SignUp from './pages/SignUp';\nimport RoleDashboard from './pages/RoleDashboard';\nimport toastr from 'toastr';\n\ntoastr.options = {\n    \"closeButton\": false,\n    \"debug\": false,\n    \"newestOnTop\": false,\n    \"progressBar\": false,\n    \"positionClass\": \"toast-top-center\",\n    \"preventDuplicates\": true,\n    \"onclick\": null,\n    \"showDuration\": \"300\",\n    \"hideDuration\": \"1000\",\n    \"timeOut\": \"5000\",\n    \"extendedTimeOut\": \"1000\",\n    \"showEasing\": \"swing\",\n    \"hideEasing\": \"linear\",\n    \"showMethod\": \"fadeIn\",\n    \"hideMethod\": \"fadeOut\"\n  }\n\nconst IndexApp = () => {\n    return(\n        <Provider store={ store }>\n        <Router>\n            <Switch>\n                <Route path='/user' exact component={Dashboard} />\n                <Route exact path='/role' component={RoleDashboard} />\n                <Route path='/login' component={Login} />\n                <Route path='/signup' component={SignUp} />\n            </Switch>\n        </Router>\n        </Provider>\n    )\n}\n\nReactDOM.render(<IndexApp />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}